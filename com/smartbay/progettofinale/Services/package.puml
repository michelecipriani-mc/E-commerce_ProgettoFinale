@startuml
    ' Copyright to this UML and generated images belongs to the author of the corresponding Java sources.

    ' This UML was generated by UMLDoclet (C) Copyright 2016-2025 Talsma ICT.
    ' UMLDoclet 2.2.1 is licensed under the Apache License, version 2.0
    ' and contains parts of PlantUML 1.2024.7 (ASL) Copyright 2009-2025, Arnaud Roques.

    !pragma layout smetana
    set separator ::

    package com.smartbay.progettofinale.Services {

        class CareerRequestServiceImpl [[CareerRequestServiceImpl.html]] {
            +isRoleAlreadyAssigned(User, CareerRequest): boolean
            +save(CareerRequest, User): void
            +careerAccept(Long): void
            +find(Long): CareerRequest
        }

        class ImageServiceImpl [[ImageServiceImpl.html]] {
            +saveImageOnDB(String, Article): void
            +saveImageOnDisk(MultipartFile): CompletableFuture<String>
            +deleteImage(String): void
        }

        class ArticleService [[ArticleService.html]] {
            +create(Article, Principal, MultipartFile[]): ArticleDTO
            +delete(Long): void
            +read(Long): ArticleDTO
            +readAll(): List<ArticleDTO>
            +update(Long, Article, MultipartFile[]): ArticleDTO
            +searchByCategory(Category): List<ArticleDTO>
            +searchByUser(User): List<ArticleDTO>
            +setIsAccepted(Boolean, Long): void
            +updateStatus(Long, boolean): void
            +search(String): List<ArticleDTO>
        }

        class EmailServiceImpl [[EmailServiceImpl.html]] {
            +sendSimpleEmail(String, String, String): void
        }

        interface UserService [[UserService.html]] {
            {abstract} +saveUser(UserDTO, RedirectAttributes, HttpServletRequest, HttpServletResponse): void
            {abstract} +findUserByEmail(String): User
            {abstract} +find(Long): User
            {abstract} +dashboard(): PersonalInfoDTO
            {abstract} +getUserInfo(Long): UserInfoDTO
            {abstract} +addBalance(BigDecimal): void
        }

        class UserServiceImpl [[UserServiceImpl.html]] {
            +passwordEncoder(): PasswordEncoder
            +findUserByEmail(String): User
            +saveUser(UserDTO, RedirectAttributes, HttpServletRequest, HttpServletResponse): void
            +dashboard(): PersonalInfoDTO
            +addBalance(BigDecimal): void
            +getUserInfo(Long): UserInfoDTO
            +find(Long): User
        }

        interface EmailService [[EmailService.html]] {
            {abstract} +sendSimpleEmail(String, String, String): void
        }

        class CategoryService [[CategoryService.html]] {
            +create(Category, Principal, MultipartFile[]): CategoryDTO
            +delete(Long): void
            +read(Long): CategoryDTO
            +readAll(): List<CategoryDTO>
            +update(Long, Category, MultipartFile[]): CategoryDTO
        }

        class CustomUserDetails [[CustomUserDetails.html]] {
            +isAccountNonExpired(): boolean
            +isAccountNonLocked(): boolean
            +isCredentialsNonExpired(): boolean
            +isEnabled(): boolean
            +getAuthorities(): Collection<? extends GrantedAuthority>
            +getPassword(): String
            +getUsername(): String
            +getId(): Long
            +setId(Long): void
            +getFullname(): String
        }

        interface CareerRequestService [[CareerRequestService.html]] {
            {abstract} +isRoleAlreadyAssigned(User, CareerRequest): boolean
            {abstract} +save(CareerRequest, User): void
            {abstract} +careerAccept(Long): void
            {abstract} +find(Long): CareerRequest
        }

        class CarrelloService [[CarrelloService.html]] {
            +CarrelloService(ArticleRepository, ModelMapper)
            +getCarrelloFromUtente(Long): Carrello
            +getCarrelloDTOFromUtente(Long): CarrelloDTO
            +aggiornaQuantitaArticolo(Long, Long, int): CarrelloDTO
            +rimuoviArticolo(Long, Long): CarrelloDTO
            +rimuoviArticoloDaTuttiICarrelli(Long): void
            +CarrelloIsModified(Long): boolean
            +ResetCarrelloModifiedFlag(Long): void
            +svuotaCarrello(Long): void
            +getPrezzoTotaleCarrello(Long): BigDecimal
            +carrelloToDTO(Carrello): CarrelloDTO
            +getNumeroArticoliNelCarrello(Long): int
        }

        class CustomUserDetailsService [[CustomUserDetailsService.html]] {
            +loadUserByUsername(String): CustomUserDetails
        }

        interface ImageService [[ImageService.html]] {
            {abstract} +saveImageOnDB(String, Article): void
            {abstract} +saveImageOnDisk(MultipartFile): CompletableFuture<String>
            {abstract} +deleteImage(String): void
        }

        interface CrudService<ReadDto, Model, Key> [[CrudService.html]] {
            {abstract} +readAll(): List<ReadDto>
            {abstract} +read(Key): ReadDto
            {abstract} +create(Model, Principal, MultipartFile[]): ReadDto
            {abstract} +update(Key, Model, MultipartFile[]): ReadDto
            {abstract} +delete(Key): void
        }

        class OrdineService [[OrdineService.html]] {
            +OrdineService(CarrelloService, ArticleRepository, OrdineRepository, UserRepository, SecurityService, ModelMapper)
            +creaOrdine(): OrdineDTO
            +getOrdiniUtente(): List<OrdineDTO>
            +EntityToDTO(Ordine): OrdineDTO
        }

    }

    package org.springframework.security.core.userdetails {
        interface UserDetails {
            {abstract} +getAuthorities(): Collection<? extends GrantedAuthority>
            {abstract} +getPassword(): String
            {abstract} +getUsername(): String
            +isAccountNonExpired(): boolean
            +isAccountNonLocked(): boolean
            +isCredentialsNonExpired(): boolean
            +isEnabled(): boolean
        }
        interface UserDetailsService {
            {abstract} +loadUserByUsername(String): UserDetails
        }
    }

    com.smartbay.progettofinale.Services::CareerRequestService <|.. com.smartbay.progettofinale.Services::CareerRequestServiceImpl
    com.smartbay.progettofinale.Services::ImageService <|.. com.smartbay.progettofinale.Services::ImageServiceImpl
    com.smartbay.progettofinale.Services::CrudService <|.. com.smartbay.progettofinale.Services::ArticleService
    com.smartbay.progettofinale.Services::EmailService <|.. com.smartbay.progettofinale.Services::EmailServiceImpl
    com.smartbay.progettofinale.Services::UserService <|.. com.smartbay.progettofinale.Services::UserServiceImpl
    com.smartbay.progettofinale.Services::CrudService <|.. com.smartbay.progettofinale.Services::CategoryService
    org.springframework.security.core.userdetails::UserDetails <|.. com.smartbay.progettofinale.Services::CustomUserDetails
    org.springframework.security.core.userdetails::UserDetailsService <|.. com.smartbay.progettofinale.Services::CustomUserDetailsService

    <style>
        footer {
            HyperLinkColor #8
            HyperLinkUnderlineThickness 0
        }
    </style>
    footer \n[[https://github.com/talsma-ict/umldoclet UMLDoclet 2.2.1]]
    ' Generated 2025-08-29T16:57:38.812827041+02:00[Europe/Rome]
@enduml
